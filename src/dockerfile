#Convert files to unix line endings
FROM perl:5.26 as converter
ARG provider
COPY ./provider/${provider} /provider/${provider}
WORKDIR /provider/${provider}
RUN find $directory -type f -name "*.sh"  | xargs perl -pi -e 's/\r\n/\n/g'

#Create container with terraform installed. Can't use docker image as terraform is used as entry point
FROM golang:1.10.2-alpine3.7 as terraformBase
ENV TERRAFORM_VERSION=0.11.5
RUN apk add --update git bash openssh make
ENV TF_DEV=true
ENV TF_RELEASE=true
WORKDIR $GOPATH/src/github.com/hashicorp/terraform
RUN git clone https://github.com/hashicorp/terraform.git ./ && \
    git checkout v${TERRAFORM_VERSION} && \
    /bin/bash scripts/build.sh
WORKDIR $GOPATH

#Build terraform provider
FROM terraformBase as providerBase
ARG provider
COPY --from=converter /provider/${provider} /go/src/github.com/terraform-providers/${provider}
WORKDIR /go/src/github.com/terraform-providers/${provider}
RUN make fmt
RUN make build

#Run terraform provider and execute commands
FROM providerBase
ARG provider
ENV mode $mode \
	testPrefix $testPrefix \
	subscriptionId $subscriptionId \
	clientId $clientId \
	clientSecret $clientSecret \
	tenantId $tenantId \
	location $location \
	locationAlt $locationAlt
COPY *.tf /go/src/github.com/terraform-providers/${provider}/
WORKDIR /go/src/github.com/terraform-providers/${provider}
CMD export ARM_SUBSCRIPTION_ID=${subscriptionId}; \
	export ARM_CLIENT_ID=${clientId}; \
	export ARM_CLIENT_SECRET=${clientSecret}; \
	export ARM_TENANT_ID=${tenantId}; \
	export ARM_TEST_LOCATION=${location}; \
	export ARM_TEST_LOCATION_ALT=${locationAlt}; \
	if [ ${mode} = 'test' ]; then make test TESTARGS='-run=${testPrefix}'; \
    	elif [ ${mode} = 'testacc' ]; then make testacc TESTARGS='-run=${testPrefix}'; \
		else bash; \
	fi